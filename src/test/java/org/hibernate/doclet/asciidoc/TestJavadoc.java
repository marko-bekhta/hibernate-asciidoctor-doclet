package org.hibernate.doclet.asciidoc;

import org.hibernate.doclet.asciidoc.other.AnotherDocClass;
import org.hibernate.doclet.asciidoc.other.OtherDocClass;

/**
 * @asciidoc some text in `asciidoc`
 *
 * [source,java]
 * ----
 * var a = new FileOutputStream("file.name");
 * ----
 *
 * Link to some docs javadoc:InnerClass#CONSTANT[package=pkg, class=InnerClass, variable=CONSTANT]
 * {@link AnotherDocClass.Inner#method(String)}
 *
 * Another section with
 * Links {@link InnerClass#CONSTANT} - link to a constant
 * {@link InnerClass#getInstance() some text} - link to a static method with a text
 * {@link InnerClass#methodWithParameters(String, Integer)} - method with parameters.
 * {@link OtherDocClass#OTHER_CONSTANT} and {@link AnotherDocClass#ANOTHER_CONSTANT}
 *
 * and then some text after links
 *
 * @see String#replace(char, char)
 */
public class TestJavadoc {

	/**
	 * {@link StringBuilder for reference} generated by regular javadoc.
	 *
	 * @asciidoc more asciidoc javadoc with a link to a jdk class {@link StringBuilder}
	 */
	public void methodName() {
	}


	public static class InnerClass {
		public static final String CONSTANT = "some value";

		/**
		 * Constructor
		 */
		InnerClass() {

		}

		/**
		 * method no params
		 */
		public boolean isSomething() {
			return true;
		}

		/**
		 * method with params
		 */
		public void methodWithParameters(String string, Integer integer) {

		}

		/**
		 * static method
		 *
		 * @return an instance
		 */
		public static InnerClass getInstance() {
			return new InnerClass();
		}
	}
}
